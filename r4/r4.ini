#include<SD.h>
#include <SPI.h>
#include "WiFiS3.h"
#include "WiFiSSLClient.h"
#include "IPAddress.h"

char *arquivoEnviando="L10-10.S";
char ssid[] = "Duo";        
char pass[] = "duomc7352";        

char server[] = "www.google.com";
int status = WL_IDLE_STATUS;
WiFiSSLClient client;

void iSD()
{
    digitalWrite(10,HIGH);
    digitalWrite(4,LOW);
}

void fSD()
{
    digitalWrite(10,LOW);
    digitalWrite(4,HIGH);
}

int contarLinhas(File *myFile)
{
    //iSD();
    int n=0;
    if (myFile)
    {
        char caractere;
        while (myFile->available())
        {
            caractere=myFile->read();
            if(caractere=='\n')
            {
                n++;
            }
        }
        //fSD();
        return n;
    }
    else
    {
        Serial.println("Erro ao abrir o arquivo ");
        //fSD();
        return -1;

    }
}

int sendGET(char *data, WiFiSSLClient *client){

    Serial.println("Iniciando Req");
    int timer;
    char compareMe[]="INSERIDO\0";
    int match = 0;
    char servidor[]="23.239.10.90";

    if (client->connect(servidor,8080))
    { 
        Serial.println("Conectou");
        client->setTimeout(10000);
        Serial.println("Conectado");
        client->println(data);
        Serial.println(data);
        client->println("Host: adm.duo.com.br");
        Serial.println("Host: adm.duo.com.br"); 
        client->println("Connection: close");
        Serial.println("Connection: close");
         
        client->println();
        Serial.println("Enviado, aguardando resposta.");
    }else{
            return 0;
    }

        timer = 0;

        while(!client->available()){
                Serial.print(".");
                delay(100);
                timer++;
                if(timer == 50){
                        return false;
                }
        }
        
        /* Serial.print("\n"); */
        

        while(client->available() && client->connected() && match<8){

                char c = client->read(); 
                Serial.print(c); 
                
                if(compareMe[match] == c){
                        match++;
                }else{
                        match = 0;
                }
        }

        client->flush();
        client->stop();
        
        Serial.println("MATCH");

        if(match == 8){
                return 1;
        }else{
                return 0;
        }
}

void setup(){
    Serial.begin(9600);
    pinMode(10,OUTPUT);
    pinMode(4,OUTPUT);
    digitalWrite(10,HIGH);
    digitalWrite(4,HIGH);
    delay(50);
    Serial.println("Heloo");
    Serial.print("Initializing SD card...");

    if (!SD.begin(4)) {
        Serial.println("initialization failed!");
       // while (1);
    }

      // check for the WiFi module:
  if (WiFi.status() == WL_NO_MODULE) {
    Serial.println("Communication with WiFi module failed!");
    // don't continue
    while (true);
  }

    Serial.println("Conectando...");
    // attempt to connect to WiFi network:
  while (status != WL_CONNECTED) {
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(ssid);
    // Connect to WPA/WPA2 network.
    status = WiFi.begin(ssid, pass);
     
    // wait 10 seconds for connection:
    delay(10000);
  }

    if (client.connect(server, 443)) {
    Serial.println("connected to server");
    // Make a HTTP request:
    client.println("GET / HTTP/1.1");
    client.println("Host: www.google.com");
    client.println("Connection: close");
    client.println();
    client.stop();
    client.flush();
  }
  
}

void loop(){
    File cafe = SD.open(arquivoEnviando);

    int teste = contarLinhas(&cafe);

    Serial.print("Teste: ");Serial.print(teste);Serial.print("\n");

    char json[] = "GET /test?raw=%d&SD=%d";
    sendGET(json, &client);

}